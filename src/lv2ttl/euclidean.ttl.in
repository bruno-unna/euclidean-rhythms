# Copyright 2023 by Bruno Unna.

# This file is part of Euclidean Rhythms.

# Euclidean Rhythms is free software: you can redistribute it and/or modify it under the terms of the
# GNU General Public License as published by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.

# Euclidean Rhythms is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
# Public License for more details.

# You should have received a copy of the GNU General Public License along with Euclidean Rhythms.
# If not, see <https://www.gnu.org/licenses/>.

@prefix atom:  <http://lv2plug.in/ns/ext/atom#> .
@prefix doap:  <http://usefulinc.com/ns/doap#> .
@prefix foaf:  <http://xmlns.com/foaf/0.1/> .
@prefix lv2:   <http://lv2plug.in/ns/lv2core#> .
@prefix midi:  <http://lv2plug.in/ns/ext/midi#> .
@prefix param: <http://lv2plug.in/ns/ext/parameters#> .
@prefix patch:  <http://lv2plug.in/ns/ext/patch#> .
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix pg:    <http://lv2plug.in/ns/ext/port-groups#> .
@prefix pprop: <http://lv2plug.in/ns/ext/port-props#> .
@prefix units: <http://lv2plug.in/ns/extensions/units#> .
@prefix state: <http://lv2plug.in/ns/ext/state#> .
@prefix time:  <http://lv2plug.in/ns/ext/time#> .
@prefix ui:     <http://lv2plug.in/ns/extensions/ui#> .
@prefix urid:  <http://lv2plug.in/ns/ext/urid#> .

<https://github.com/bruno-unna#me>
  a foaf:Person ;
  foaf:name "Bruno Unna" ;
  foaf:homepage <https://github.com/bruno-unna> ;
  foaf:mbox <mailto:bruno.unna@gmail.com> .

<https://github.com/bruno-unna/euclidean-rhythms>
  a lv2:Plugin;

  rdfs:comment "A plugin to produce MIDI events using euclidean algorithms" ;

  doap:maintainer <https://github.com/bruno-unna#me> ;
  doap:license <https://opensource.org/licenses/GPL-3.0> ;
  doap:name "Ritmos Euclidianos"@es ,
    "Euclidean Rhythms" ;
  doap:shortdesc "Un plugin para producir eventos MIDI usando algorithmos euclidianos"@es ,
    "A plugin to produce MIDI events using euclidean algorithms" ;

  lv2:project <https://github.com/bruno-unna/euclidean-rhythms>;
  lv2:optionalFeature lv2:hardRTCapable ;
  lv2:requiredFeature urid:map ;

  lv2:minorVersion @MINOR_VERSION@ ;
  lv2:microVersion @MICRO_VERSION@ ;

  lv2:port [
    a lv2:InputPort, atom:AtomPort ;
    atom:bufferType atom:Sequence ;
    atom:supports time:Position ;
    lv2:index 0 ;
    lv2:symbol "control" ;
    lv2:name "Control" ;
  ], [
    a lv2:OutputPort, atom:AtomPort ;
    atom:bufferType atom:Sequence ;
    atom:supports midi:MidiEvent ;
    lv2:index 1 ;
    lv2:symbol "midi_out" ;
    lv2:name "MIDI Out" ;
  ],

  # generator 0
  [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 2 ;
    lv2:symbol "switch_0" ;
    lv2:name "Enabled" ;
    lv2:default 1 ;
    lv2:portProperty lv2:toggled ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 3 ;
    lv2:symbol "beats_0" ;
    lv2:name "Number of beats" ;
    lv2:minimum 2 ;
    lv2:maximum 64 ;
    lv2:default 8 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 4 ;
    lv2:symbol "onsets_0" ;
    lv2:name "Number of onsets" ;
    lv2:minimum 0 ;
    lv2:maximum 64 ;
    lv2:default 5 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 5 ;
    lv2:symbol "rotation_0" ;
    lv2:name "Number of places the pattern is rotated" ;
    lv2:minimum -32 ;
    lv2:maximum 31 ;
    lv2:default 0 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 6 ;
    lv2:symbol "bars_0" ;
    lv2:name "Pattern size (in bars)" ;
    lv2:minimum 1 ;
    lv2:maximum 8 ;
    lv2:default 1 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 7 ;
    lv2:symbol "channel_0" ;
    lv2:name "MIDI channel to use" ;
    lv2:minimum 1 ;
    lv2:maximum 16 ;
    lv2:default 10 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 8 ;
    lv2:symbol "note_0" ;
    lv2:name "Note to play" ;
    lv2:minimum 0 ;
    lv2:maximum 127 ;
    lv2:default 48 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 9 ;
    lv2:symbol "velocity_0" ;
    lv2:name "Note velocity" ;
    lv2:minimum 0 ;
    lv2:maximum 127 ;
    lv2:default 64 ;
    lv2:portProperty lv2:integer ;
  ],

  # generator 1
  [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 10 ;
    lv2:symbol "switch_1" ;
    lv2:name "Enabled" ;
    lv2:default 0 ;
    lv2:portProperty lv2:toggled ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 11 ;
    lv2:symbol "beats_1" ;
    lv2:name "Number of beats" ;
    lv2:minimum 2 ;
    lv2:maximum 64 ;
    lv2:default 8 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 12 ;
    lv2:symbol "onsets_1" ;
    lv2:name "Number of onsets" ;
    lv2:minimum 0 ;
    lv2:maximum 64 ;
    lv2:default 5 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 13 ;
    lv2:symbol "rotation_1" ;
    lv2:name "Number of places the pattern is rotated" ;
    lv2:minimum -32 ;
    lv2:maximum 31 ;
    lv2:default 0 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 14 ;
    lv2:symbol "bars_1" ;
    lv2:name "Pattern size (in bars)" ;
    lv2:minimum 1 ;
    lv2:maximum 8 ;
    lv2:default 1 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 15 ;
    lv2:symbol "channel_1" ;
    lv2:name "MIDI channel to use" ;
    lv2:minimum 1 ;
    lv2:maximum 16 ;
    lv2:default 10 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 16 ;
    lv2:symbol "note_1" ;
    lv2:name "Note to play" ;
    lv2:minimum 0 ;
    lv2:maximum 127 ;
    lv2:default 48 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 17 ;
    lv2:symbol "velocity_1" ;
    lv2:name "Note velocity" ;
    lv2:minimum 0 ;
    lv2:maximum 127 ;
    lv2:default 64 ;
    lv2:portProperty lv2:integer ;
  ],

  # generator 2
  [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 18 ;
    lv2:symbol "switch_2" ;
    lv2:name "Enabled" ;
    lv2:default 0 ;
    lv2:portProperty lv2:toggled ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 19 ;
    lv2:symbol "beats_2" ;
    lv2:name "Number of beats" ;
    lv2:minimum 2 ;
    lv2:maximum 64 ;
    lv2:default 8 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 20 ;
    lv2:symbol "onsets_2" ;
    lv2:name "Number of onsets" ;
    lv2:minimum 0 ;
    lv2:maximum 64 ;
    lv2:default 5 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 21 ;
    lv2:symbol "rotation_2" ;
    lv2:name "Number of places the pattern is rotated" ;
    lv2:minimum -32 ;
    lv2:maximum 31 ;
    lv2:default 0 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 22 ;
    lv2:symbol "bars_2" ;
    lv2:name "Pattern size (in bars)" ;
    lv2:minimum 1 ;
    lv2:maximum 8 ;
    lv2:default 1 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 23 ;
    lv2:symbol "channel_2" ;
    lv2:name "MIDI channel to use" ;
    lv2:minimum 1 ;
    lv2:maximum 16 ;
    lv2:default 10 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 24 ;
    lv2:symbol "note_2" ;
    lv2:name "Note to play" ;
    lv2:minimum 0 ;
    lv2:maximum 127 ;
    lv2:default 48 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 25 ;
    lv2:symbol "velocity_2" ;
    lv2:name "Note velocity" ;
    lv2:minimum 0 ;
    lv2:maximum 127 ;
    lv2:default 64 ;
    lv2:portProperty lv2:integer ;
  ],

  # generator 3
  [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 26 ;
    lv2:symbol "switch_3" ;
    lv2:name "Enabled" ;
    lv2:default 0 ;
    lv2:portProperty lv2:toggled ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 27 ;
    lv2:symbol "beats_3" ;
    lv2:name "Number of beats" ;
    lv2:minimum 2 ;
    lv2:maximum 64 ;
    lv2:default 8 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 28 ;
    lv2:symbol "onsets_3" ;
    lv2:name "Number of onsets" ;
    lv2:minimum 0 ;
    lv2:maximum 64 ;
    lv2:default 5 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 29 ;
    lv2:symbol "rotation_3" ;
    lv2:name "Number of places the pattern is rotated" ;
    lv2:minimum -32 ;
    lv2:maximum 31 ;
    lv2:default 0 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 30 ;
    lv2:symbol "bars_3" ;
    lv2:name "Pattern size (in bars)" ;
    lv2:minimum 1 ;
    lv2:maximum 8 ;
    lv2:default 1 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 31 ;
    lv2:symbol "channel_3" ;
    lv2:name "MIDI channel to use" ;
    lv2:minimum 1 ;
    lv2:maximum 16 ;
    lv2:default 10 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 32 ;
    lv2:symbol "note_3" ;
    lv2:name "Note to play" ;
    lv2:minimum 0 ;
    lv2:maximum 127 ;
    lv2:default 48 ;
    lv2:portProperty lv2:integer ;
  ], [
    a lv2:InputPort, lv2:ControlPort ;
    lv2:index 33 ;
    lv2:symbol "velocity_3" ;
    lv2:name "Note velocity" ;
    lv2:minimum 0 ;
    lv2:maximum 127 ;
    lv2:default 64 ;
    lv2:portProperty lv2:integer ;
  ];
.
